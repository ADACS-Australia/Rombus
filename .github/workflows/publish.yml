name: Publish

on:
  release:
    types: [created]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:

    # Check-out Repo
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Update PIP
      run: |
        python -m pip install --upgrade pip

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v2
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: |
        poetry install --no-interaction --no-root
        poetry install --no-interaction --no-root --extras docs

    - name: Generate build
      run: |
        poetry version $(git describe --tags --abbrev=0)
        poetry build

    - name: Install library
      run: |
        poetry install --no-interaction

    - name: Code tests
      run: |
        source .venv/bin/activate
        pytest 

    - name: Documentation build test
      run: |
        source .venv/bin/activate
        make html

    - name: Trigger RTDs build
      run: |
        curl -X POST                                                    \
             -H "Authorization: Token ${{ secrets.RTD_WEBHOOK_TOKEN }}" \
             ${{ secrets.RTD_WEBHOOK_URL_DFISHER_2022A }}

    - name: Publish to PyPI
      run: |
        poetry config http-basic.pypi "__token__" ${{ secrets.PYPI_TOKEN }}
        poetry publish
