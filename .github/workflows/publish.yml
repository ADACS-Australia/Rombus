name: Publish

on:
  release:
    types: [created]

jobs:

  # Useful for workflow debugging
  # printJob:
  #   name: Print event
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Dump GitHub context
  #     env:
  #       GITHUB_CONTEXT: ${{ toJson(github) }}
  #     run: |
  #       echo "$GITHUB_CONTEXT"

  publish:
    runs-on: ubuntu-latest

    steps:

      # Set-up dependencies
      - name: Check-out repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Needed for tags to be fetched; see https://github.com/actions/checkout/issues/290

      - name: Set-up MPI
        uses: mpi4py/setup-mpi@v1

      - name: Set-up Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Set-up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'poetry'

      # Configure project
      - name: Set project version
        run: |
          poetry version $(git describe --tags --abbrev=0)

      # Publish
      - name: Trigger RTDs build
        run: |
          curl -X POST                                                    \
               -H "Authorization: Token ${{ secrets.RTD_WEBHOOK_TOKEN }}" \
               ${{ secrets.RTD_WEBHOOK_URL_ROMBUS }}

      - name: Publish to PyPI
        run: |
          poetry config http-basic.pypi "__token__" ${{ secrets.PYPI_TOKEN }}
          poetry publish --build
